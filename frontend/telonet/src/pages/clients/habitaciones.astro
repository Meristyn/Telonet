---
import ClientsLayouts from "../../layouts/ClientsLayout.astro";
import mysql from "mysql2/promise";

let fecha_inicio = ""; // Fecha de inicio seleccionada
let fecha_final = ""; // Fecha final seleccionada
let habitacionesDisponibles = []; // Para almacenar las habitaciones disponibles

// Configuración de la base de datos
const dbConfig = {
    host: "localhost",
    user: "root",
    password: "1234",
    database: "telonet",
};

// Si las fechas están definidas, ejecuta el procedimiento almacenado
if (fecha_inicio && fecha_final) {
    const connection = await mysql.createConnection(dbConfig);
    const [rows] = await connection.execute("CALL GetHabitacionesDisponiblesPorFecha(?, ?)", [
        fecha_inicio,
        fecha_final,
    ]);
    habitacionesDisponibles = rows[0]; // Obtén las habitaciones disponibles
    await connection.end();
}
---
<ClientsLayouts title="Reservas">
	<main class="flex flex-col items-center w-full mt-5">
		<div class="flex flex-col items-center gap-5 mx-10">
			<h1 class="text-5xl font-bold">Reserva de habitaciones</h1>
			<button class="btn btn-primary" onclick="modalFechas.showModal()">
				Seleccionar Fechas
			</button>
			<section class="w-full mt-5">
				<h2 class="text-3xl font-bold mb-4">Habitaciones Disponibles</h2>
				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5">
					{habitacionesDisponibles.length > 0
						? habitacionesDisponibles.map((habitacion) => (
								<div class="card shadow-lg p-4">
									<h3 class="text-xl font-bold">
										Habitación: {habitacion.numero_habitacion}
									</h3>
									<p>Tipo: {habitacion.tipo_habitacion}</p>
									<p>Precio: ${habitacion.precio}/noche</p>
									<button
										class="btn btn-primary mt-3"
										onclick={() =>
											realizarReserva(
												habitacion.id_habitacion,
												fecha_inicio,
												fecha_final
											)
										}
									>
										Reservar
									</button>
								</div>
						  ))
						: <p>No hay habitaciones disponibles en este rango de fechas.</p>}
				</div>
			</section>
		</div>
	</main>
</ClientsLayouts>

<!-- Modal para seleccionar las fechas -->
<dialog id="modalFechas" class="modal">
	<div class="modal-box">
		<h3 class="text-lg font-bold">Seleccionar Fechas</h3>
		<p class="py-4">Indica el rango de fechas para consultar disponibilidad</p>
		<form id="fechasForm" class="flex flex-col gap-4" onsubmit="actualizarFechas(event)">
			<div class="flex flex-row gap-5">
				<div class="flex flex-col items-start gap-2">
					<label for="fecha_inicio" class="font-bold">Fecha de inicio</label>
					<input
						type="date"
						id="fecha_inicio"
						class="input input-bordered"
						required
					/>
				</div>
				<div class="flex flex-col items-start gap-2">
					<label for="fecha_final" class="font-bold">Fecha final</label>
					<input
						type="date"
						id="fecha_final"
						class="input input-bordered"
						required
					/>
				</div>
			</div>
			<div class="modal-action">
				<button type="submit" class="btn btn-primary">Buscar</button>
				<button class="btn btn-error" onclick="modalFechas.close()">Cancelar</button>
			</div>
		</form>
	</div>
</dialog>

<script>
	// Actualiza las fechas y recarga la página
	function actualizarFechas(event) {
		event.preventDefault();
		const fechaInicioInput = document.getElementById("fecha_inicio").value;
		const fechaFinalInput = document.getElementById("fecha_final").value;

		// Establece los valores de fecha en los parámetros de consulta
		window.location.href = `?fecha_inicio=${fechaInicioInput}&fecha_final=${fechaFinalInput}`;
	}

	// Realiza una reserva llamando al procedimiento almacenado directamente
	async function realizarReserva(id_habitacion, fecha_inicio, fecha_final) {
		try {
			const connection = await mysql.createConnection(dbConfig);
			await connection.execute("CALL CrearReserva(?, ?, ?)", [
				id_habitacion,
				fecha_inicio,
				fecha_final,
			]);
			await connection.end();
			alert("Reserva realizada con éxito.");
			location.reload();
		} catch (error) {
			console.error("Error al realizar la reserva:", error);
			alert("No se pudo realizar la reserva.");
		}
	}
</script>
